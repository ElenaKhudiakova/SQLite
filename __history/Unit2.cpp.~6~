//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit2.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "VirtualTrees"
#pragma resource "*.dfm"
TForm2 *Form2;
//---------------------------------------------------------------------------
__fastcall TForm2::TForm2(TComponent* Owner)
	: TForm(Owner)
{
	VirtualStringTree1->NodeDataSize = sizeof(TreeNodeStruct);
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Button1Click(TObject *Sender)
{
	VirtualStringTree1->Clear();
	VirtualStringTree1->BeginUpdate();

	for (int  i = 0; i < 100;i++)
	{
		PVirtualNode entryNode = VirtualStringTree1->AddChild(VirtualStringTree1->RootNode);
		TreeNodeStruct *nodeData = (TreeNodeStruct*)VirtualStringTree1->GetNodeData(entryNode);

		nodeData->Id = i;
		nodeData->FileName = u"Файл номер ";
		nodeData->FileName += UnicodeString(i);
	};

	VirtualStringTree1->EndUpdate();
}
//---------------------------------------------------------------------------
void __fastcall TForm2::VirtualStringTree1GetText(TBaseVirtualTree *Sender, PVirtualNode Node,
          TColumnIndex Column, TVSTTextType TextType, UnicodeString &CellText)

{
	if(!Node)return;
	TreeNodeStruct *nodeData = (TreeNodeStruct*)VirtualStringTree1->GetNodeData(Node);
	switch(Column)
	{
		case 0:
		{
			CellText = UnicodeString(nodeData->Id); break;
		}
		case 1:
		{
			CellText = UnicodeString(nodeData->FileName); break;
		}
	};
}
//---------------------------------------------------------------------------

void __fastcall TForm2::VirtualStringTree1AddToSelection(TBaseVirtualTree *Sender,
          PVirtualNode Node)
{
	TreeNodeStruct *nodeData = (TreeNodeStruct*)VirtualStringTree1->GetNodeData(Node);
	Label2->Caption = nodeData->Id;

	PVirtualNode selectedNode = VirtualStringTree1->FocusedNode;
	unsigned int selectedNodeIndex = selectedNode->Index;

	VirtualStringTree1->DeleteNode(selectedNode);

	if (!selectedNode){
	//работа
	};
}
//---------------------------------------------------------------------------

